[project]
name = "tta-dev-primitives"
version = "0.1.0"
description = "Production-ready development primitives for TTA - workflow patterns, recovery, observability, and testing utilities"
authors = [{ name = "TTA Development Team" }]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "pydantic>=2.6.0",
    "structlog>=24.1.0",
    "opentelemetry-api>=1.24.0",
    "opentelemetry-sdk>=1.24.0",
    "tenacity>=8.2.3",
]

[project.optional-dependencies]
memory = ["agent-memory-client>=0.12.0"]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "ruff>=0.3.0",
    "mypy>=1.8.0",
]
tracing = [
    "opentelemetry-instrumentation>=0.45b0",
    "opentelemetry-exporter-otlp>=1.24.0",
]
apm = [
    "opentelemetry-api>=1.20.0",
    "opentelemetry-sdk>=1.20.0",
    "opentelemetry-exporter-prometheus>=0.41b0",
    "opentelemetry-instrumentation>=0.41b0",
    "prometheus-client>=0.19.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/tta_dev_primitives"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "B", "UP", "ANN"]
ignore = ["E501", "ANN101", "ANN102"]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
