[project]
name = "universal-agent-context"
version = "1.0.0"
description = "Multi-agent coordination primitives for TTA.dev"
readme = "README.md"
requires-python = ">=3.11"
license = { file = "LICENSE" }
authors = [{ name = "TTA.dev Team" }]

dependencies = ["tta-dev-primitives"]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
    "ruff>=0.8.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/universal_agent_context"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long (handled by formatter)
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]     # Allow unused imports in __init__.py
"tests/*" = ["F401", "F811"] # Allow unused imports and redefinitions in tests

[tool.ruff.lint.isort]
known-first-party = ["universal_agent_context"]

[tool.pyright]
include = ["src"]
exclude = ["**/__pycache__"]
pythonVersion = "3.11"
pythonPlatform = "Linux"
typeCheckingMode = "basic"
