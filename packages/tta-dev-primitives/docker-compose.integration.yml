version: '3.8'

services:
  # Jaeger - All-in-one (UI, collector, query, agent)
  jaeger:
    image: jaegertracing/all-in-one:1.52
    container_name: tta-jaeger
    ports:
      - "5775:5775/udp"   # Zipkin compact thrift
      - "6831:6831/udp"   # Jaeger compact thrift
      - "6832:6832/udp"   # Jaeger binary thrift
      - "5778:5778"       # Serve configs
      - "16686:16686"     # Jaeger UI
      - "14268:14268"     # Jaeger collector HTTP
      - "14250:14250"     # Jaeger collector gRPC
      - "9411:9411"       # Zipkin compatible endpoint
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - tta-observability

  # Prometheus - Metrics collection
  prometheus:
    image: prom/prometheus:v2.48.1
    container_name: tta-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./tests/integration/config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - tta-observability

  # Grafana - Visualization (optional, for manual inspection)
  grafana:
    image: grafana/grafana:10.2.3
    container_name: tta-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./tests/integration/config/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml:ro
    networks:
      - tta-observability
    depends_on:
      - prometheus
      - jaeger

  # OpenTelemetry Collector (optional, for advanced scenarios)
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.91.0
    container_name: tta-otel-collector
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # Health check
    volumes:
      - ./tests/integration/config/otel-collector-config.yml:/etc/otel-collector-config.yml:ro
    command: ["--config=/etc/otel-collector-config.yml"]
    networks:
      - tta-observability
    depends_on:
      - jaeger
      - prometheus

networks:
  tta-observability:
    driver: bridge

volumes:
  prometheus-data:
  grafana-data:

