name: tta-dev-primitives
version: 0.1.0
type: library
category: development-tools

description: |
  Production-ready development primitives for TTA agent workflows.
  Provides composable workflow patterns, recovery strategies, performance
  utilities, and observability tools for development automation.
  
  NOTE: This is for development tooling, not player-facing game components.

author: TTA Development Team
license: Proprietary

repository:
  type: git
  url: https://github.com/theinterneti/TTA.dev

keywords:
  - workflow
  - primitives
  - recovery
  - retry
  - fallback
  - timeout
  - saga
  - cache
  - observability
  - tracing
  - development
  - automation

dependencies:
  runtime:
    - pydantic: ">=2.6.0"
    - structlog: ">=24.1.0"
    - opentelemetry-api: ">=1.24.0"
    - opentelemetry-sdk: ">=1.24.0"
    - tenacity: ">=8.2.3"
  
  optional:
    tracing:
      - opentelemetry-instrumentation: ">=0.45b0"
      - opentelemetry-exporter-otlp: ">=1.24.0"
    apm:
      - opentelemetry-exporter-prometheus: ">=0.41b0"
      - opentelemetry-instrumentation: ">=0.41b0"
  
  development:
    - pytest: ">=8.0.0"
    - pytest-asyncio: ">=0.23.0"
    - pytest-cov: ">=4.1.0"
    - pytest-mock: ">=3.12.0"
    - ruff: ">=0.3.0"
    - mypy: ">=1.8.0"

mcp:
  compatibility: true
  tools:
    - name: sequential_workflow
      description: Execute workflow steps in sequence
      category: composition
    - name: parallel_workflow
      description: Execute workflow steps concurrently
      category: composition
    - name: router_workflow
      description: Dynamically route to optimal implementation
      category: composition
    - name: retry_operation
      description: Retry failed operations with exponential backoff
      category: recovery
    - name: fallback_operation
      description: Provide fallback for failed operations
      category: recovery
    - name: timeout_operation
      description: Enforce timeout on operations
      category: recovery
    - name: saga_transaction
      description: Distributed transaction with compensation
      category: recovery
    - name: cached_operation
      description: Cache operation results with TTL
      category: performance

exports:
  - name: Sequential
    path: tta_dev_primitives.core.Sequential
    type: class
  - name: Parallel
    path: tta_dev_primitives.core.Parallel
    type: class
  - name: Conditional
    path: tta_dev_primitives.core.Conditional
    type: class
  - name: Router
    path: tta_dev_primitives.core.Router
    type: class
  - name: Retry
    path: tta_dev_primitives.recovery.Retry
    type: class
  - name: Fallback
    path: tta_dev_primitives.recovery.Fallback
    type: class
  - name: Timeout
    path: tta_dev_primitives.recovery.Timeout
    type: class
  - name: Saga
    path: tta_dev_primitives.recovery.Saga
    type: class
  - name: cached
    path: tta_dev_primitives.performance.cached
    type: decorator

metadata:
  stability: stable
  maturity: production
  test_coverage: 57%
  test_count: 35
  documentation: comprehensive
  
quality:
  tests:
    total: 35
    passing: 35
    coverage:
      overall: 57%
      core: 97%
      recovery: 92%
      performance: 100%
  
  code_quality:
    formatter: ruff
    linter: ruff
    type_checker: mypy
    
changelog:
  - version: 0.1.0
    date: 2025-10-28
    changes:
      - Consolidated tta-workflow-primitives and dev-primitives
      - Renamed to tta-dev-primitives for clarity
      - Fixed OpenTelemetry dependency (Jaeger â†’ OTLP)
      - Initial release with 35 passing tests
