name: TODO Compliance Validation

on:
  pull_request:
    branches: [main]
    paths:
      - 'logseq/journals/**'
      - 'logseq/pages/**'
      - 'scripts/validate-todos.py'
  push:
    branches: [main]
    paths:
      - 'logseq/journals/**'
      - 'logseq/pages/**'
      - 'scripts/validate-todos.py'

jobs:
  validate-todos:
    runs-on: ubuntu-latest
    name: Validate Logseq TODO Compliance

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Add uv to PATH
        run: echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Run TODO validation
        id: validate
        run: |
          echo "Running TODO validation..."
          uv run python scripts/validate-todos.py --json > validation-result.json
          cat validation-result.json
          
          # Extract compliance rate
          COMPLIANCE=$(jq -r '.compliance_rate' validation-result.json)
          TOTAL=$(jq -r '.total_todos' validation-result.json)
          COMPLIANT=$(jq -r '.compliant_todos' validation-result.json)
          ISSUES=$(jq -r '.issues_count' validation-result.json)
          MISSING_PAGES=$(jq -r '.missing_kb_pages_count' validation-result.json)
          
          echo "compliance_rate=$COMPLIANCE" >> $GITHUB_OUTPUT
          echo "total_todos=$TOTAL" >> $GITHUB_OUTPUT
          echo "compliant_todos=$COMPLIANT" >> $GITHUB_OUTPUT
          echo "issues_count=$ISSUES" >> $GITHUB_OUTPUT
          echo "missing_kb_pages=$MISSING_PAGES" >> $GITHUB_OUTPUT
          
          # Check if compliance is 100%
          if [ "$COMPLIANCE" != "100.0" ]; then
            echo "❌ TODO compliance is $COMPLIANCE%, expected 100%"
            exit 1
          fi
          
          echo "✅ TODO compliance: 100% ($COMPLIANT/$TOTAL TODOs)"

      - name: Comment PR with validation results
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const result = JSON.parse(fs.readFileSync('validation-result.json', 'utf8'));
            
            const compliance = result.compliance_rate;
            const total = result.total_todos;
            const compliant = result.compliant_todos;
            const issues = result.issues_count;
            const missingPages = result.missing_kb_pages_count;
            
            const status = compliance === 100 ? '✅' : '❌';
            const statusText = compliance === 100 ? 'PASSED' : 'FAILED';
            
            let body = `## ${status} TODO Compliance Validation - ${statusText}\n\n`;
            body += `**Compliance Rate:** ${compliance}%\n`;
            body += `**TODOs:** ${compliant}/${total} compliant\n`;
            
            if (issues > 0) {
              body += `**Issues Found:** ${issues}\n`;
            }
            
            if (missingPages > 0) {
              body += `**Missing KB Pages:** ${missingPages}\n`;
            }
            
            if (compliance === 100) {
              body += `\n✅ All TODOs are properly formatted with required tags and properties!\n`;
            } else {
              body += `\n❌ Some TODOs are missing required tags or properties.\n`;
              body += `\nPlease run \`uv run python scripts/validate-todos.py\` locally to see detailed issues.\n`;
              body += `\n**Required for all TODOs:**\n`;
              body += `- Category tag: \`#dev-todo\` or \`#user-todo\`\n`;
              body += `- For \`#dev-todo\`: \`type::\`, \`priority::\`, \`package::\` properties\n`;
              body += `- For \`#user-todo\`: \`type::\`, \`audience::\`, \`difficulty::\` properties\n`;
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

      - name: Upload validation results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: todo-validation-results
          path: validation-result.json
          retention-days: 30

